<launch>
    <param name="robot_1/robot_description" command="$(find xacro)/xacro $(find hdvs_launch)/robots/panda_arm_camera.urdf.xacro" />
    <param name="robot_2/robot_description" command="$(find xacro)/xacro $(find hdvs_launch)/robots/panda_arm_marker.urdf.xacro" />

    <!-- GAZEBO arguments -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="load_gripper" default="false"/>

    <!--launch GAZEBO with own world configuration -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(find robotics_assisted_tomography)/worlds/tomography.world"/> -->
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" ns="/robot_1" args="-param robot_description -urdf -model robot_1" />
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" ns="/robot_2" args="-param robot_description -urdf -model robot_2" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam ns="/robot_1" file="$(find hdvs_launch)/config/iiwa_control.yaml" command="load"/>
    <rosparam ns="/robot_2" file="$(find hdvs_launch)/config/iiwa_control.yaml" command="load"/>


    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot_1" args="--namespace=/robot_1 joint_state_controller panda_arm_controller" />
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot_2" args="--namespace=/robot_2 joint_state_controller panda_arm_controller" />
    <!-- <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/robot_2" args="-namespace=/robot_2 panda_hand_controller" /> -->


    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" ns="/robot_1" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" ns="/robot_2" />

    <!--
    <include file="$(find panda_moveit_config)/launch/planning_context.launch" ns="/robot_1">
        <arg name="load_robot_description" value="false"/>
        <arg name="load_gripper" value="$(arg load_gripper)" />
    </include>
    <include file="$(find panda_moveit_config)/launch/move_group.launch" ns="/robot_1">
        <arg name="load_gripper" value="$(arg load_gripper)" />
    </include>
    <include file="$(find panda_moveit_config)/launch/moveit_rviz.launch" ns="/robot_1" />

    <node name="joint_state_desired_publisher" pkg="topic_tools" type="relay" args="joint_states joint_states_desired" ns="/robot_1" />

    <node pkg="panda_simulation" type="robot_control_node" name="robot_control_node" ns="/robot_1" />
    -->

</launch>
